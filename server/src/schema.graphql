type Query {
  info: String!
  messages(
    filter: String
    skip: Int
    first: Int
    orderBy: MessageOrderByInput
  ): Messages!
}

enum MessageOrderByInput {
  createdAt_DESC
  createdAt_ASC
}

type Mutation {
  postMessage(text: String!): Message!
  postReply(messageId: ID!, text: String!): Reply!
}

type Subscription {
  newMessage: Message
}

type Messages {
  messageList: [Message!]!
  count: Int!
}

type Message {
  id: ID!
  text: String!

  replies: [Reply]
}

type Reply {
  id: ID!
  text: String!
  message: Message!
}
